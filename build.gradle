plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '1.0.14'
}

ext.buildnumber = 0

if (System.getenv('GITHUB_RUN_NUMBER')) {
    project.buildnumber = System.getenv('GITHUB_RUN_NUMBER')
    version = "${mod_version}+${buildnumber}-gha"
} else {
    version = "${mod_version}"
}

group = 'com.lovetropics.gamemodebuild'
base {
    archivesName = 'GamemodeBuild'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

neoForge {
    version = project.neo_version

    parchment {
        mappingsVersion = project.parchment_mappings_version
        minecraftVersion = project.parchment_minecraft_version
    }
	
	mods {
		gamemodebuild {
			sourceSet sourceSets.main
		}
	}
    
    runs {
        client {
        	client()
        }

        server {
        	server()
        }

        data {
        	data()

            systemProperty 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            systemProperty 'forge.logging.console.level', 'debug'

            programArguments.addAll '--mod', 'gamemodebuild', '--all', '--output', file('src/generated/resources/').absolutePath
        }
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": "gamemodebuild",
                "Specification-Vendor": "lovetropics",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": archiveVersion,
                "Implementation-Vendor" :"lovetropics",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            mod_version: mod_version,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
